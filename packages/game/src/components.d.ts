/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppBoard {
        "board": any;
        "previousStates": any;
        "selectedIndex": number;
        "undos": number;
        "warningIndex": number;
    }
    interface AppBoardButtons {
        "controlDifficulty": any;
        "controlUndos": any;
        "disableUndo": boolean;
        "finished": boolean;
        "undos": any;
    }
    interface AppControls {
        "difficulty": { start: number; next: number };
        "undos": { start: number; next: number };
    }
    interface AppInstructions {
    }
    interface AppMenuButton {
        "active": boolean;
    }
    interface AppRoot {
    }
}
declare global {
    interface HTMLAppBoardElement extends Components.AppBoard, HTMLStencilElement {
    }
    var HTMLAppBoardElement: {
        prototype: HTMLAppBoardElement;
        new (): HTMLAppBoardElement;
    };
    interface HTMLAppBoardButtonsElement extends Components.AppBoardButtons, HTMLStencilElement {
    }
    var HTMLAppBoardButtonsElement: {
        prototype: HTMLAppBoardButtonsElement;
        new (): HTMLAppBoardButtonsElement;
    };
    interface HTMLAppControlsElement extends Components.AppControls, HTMLStencilElement {
    }
    var HTMLAppControlsElement: {
        prototype: HTMLAppControlsElement;
        new (): HTMLAppControlsElement;
    };
    interface HTMLAppInstructionsElement extends Components.AppInstructions, HTMLStencilElement {
    }
    var HTMLAppInstructionsElement: {
        prototype: HTMLAppInstructionsElement;
        new (): HTMLAppInstructionsElement;
    };
    interface HTMLAppMenuButtonElement extends Components.AppMenuButton, HTMLStencilElement {
    }
    var HTMLAppMenuButtonElement: {
        prototype: HTMLAppMenuButtonElement;
        new (): HTMLAppMenuButtonElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLElementTagNameMap {
        "app-board": HTMLAppBoardElement;
        "app-board-buttons": HTMLAppBoardButtonsElement;
        "app-controls": HTMLAppControlsElement;
        "app-instructions": HTMLAppInstructionsElement;
        "app-menu-button": HTMLAppMenuButtonElement;
        "app-root": HTMLAppRootElement;
    }
}
declare namespace LocalJSX {
    interface AppBoard {
        "board"?: any;
        "previousStates"?: any;
        "selectedIndex"?: number;
        "undos"?: number;
        "warningIndex"?: number;
    }
    interface AppBoardButtons {
        "controlDifficulty"?: any;
        "controlUndos"?: any;
        "disableUndo"?: boolean;
        "finished"?: boolean;
        /**
          * Emitted when the "New" button is clicked. Behavior is slightly different as consuming board should not use state of menu.
         */
        "onClickBoardNew"?: (event: CustomEvent<any>) => void;
        "undos"?: any;
    }
    interface AppControls {
        "difficulty"?: { start: number; next: number };
        "undos"?: { start: number; next: number };
    }
    interface AppInstructions {
    }
    interface AppMenuButton {
        "active"?: boolean;
    }
    interface AppRoot {
    }
    interface IntrinsicElements {
        "app-board": AppBoard;
        "app-board-buttons": AppBoardButtons;
        "app-controls": AppControls;
        "app-instructions": AppInstructions;
        "app-menu-button": AppMenuButton;
        "app-root": AppRoot;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-board": LocalJSX.AppBoard & JSXBase.HTMLAttributes<HTMLAppBoardElement>;
            "app-board-buttons": LocalJSX.AppBoardButtons & JSXBase.HTMLAttributes<HTMLAppBoardButtonsElement>;
            "app-controls": LocalJSX.AppControls & JSXBase.HTMLAttributes<HTMLAppControlsElement>;
            "app-instructions": LocalJSX.AppInstructions & JSXBase.HTMLAttributes<HTMLAppInstructionsElement>;
            "app-menu-button": LocalJSX.AppMenuButton & JSXBase.HTMLAttributes<HTMLAppMenuButtonElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
        }
    }
}
